/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Frames;


import java.awt.*;
import javax.swing.*;
import classes.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
/**
 *
 * @author anasg
 */
public class Book_seat extends javax.swing.JFrame {
    
     DB_manager db = new DB_manager();
     private static final float DEFAULT_TRANSPARENCY = 0.5f;
     Traveler_info travelerFrame;
     Flight f = Flight.getInstance();
     SeatClass seat_class;
     Seats seat;
     JButton B;
     
     
     private boolean flag= true;
     
    /**
     * Creates new form Book_seat
     */
    public Book_seat(Traveler_info t, JButton B) {
        setIcon();
        BG("/images/michael-parulava-L4jrg4c7928-unsplash.jpeg");
        initComponents();
        
        
        jLabel1.setText(jLabel1.getText()+" "+f.getIdFlights());
        Passenger p = Passenger.getInstance();
        populateComboBox(CB_travelerName, "SELECT  Concat(first_Name, ' [', ssn,']') as Traveler FROM Persons where ssn ='"+p.getSsn()+"';");
        populateComboBox(CB_seatClass, "select class_name from seats_class;");
        System.out.println(CB_seatClass.getSelectedItem().toString());
        
        travelerFrame = t;
        this.B=B;
    }
    public Book_seat() {
        setIcon();
        BG("/images/michael-parulava-L4jrg4c7928-unsplash.jpeg");
        initComponents();
//        Flight f = Flight.getInstance();
//        jLabel1.setText(jLabel1.getText()+" "+f.getIdFlights());
//         System.out.println( "SELECT  seat_num FROM Dash_90_seats where seat_class_id ='"+CB_seatClass.getSelectedItem().toString()+"'"
//               + "and idFlights ='"+f.getIdFlights()+"' and empty = '1';");
//        jLabel1.setText(jLabel1.getText()+" "+f.getIdFlights());
//        Passenger p = Passenger.getInstance();
//        populateComboBox(CB_travelerName, "SELECT  Concat(first_Name, ' [', ssn,']') as Traveler FROM Persons where ssn ='"+p.getSsn()+"';");
//        populateComboBox(CB_seatClass, "");
//        if(CB_seatClass.getItemAt(0)!= null){
//        //generateCB_seatNumber();
//        }
        
    }

    
    
    public void BG(String imagePath) {
    JPanel backgroundPane2 = new JPanel() {
        @Override
        protected void paintComponent(Graphics g) {
            super.paintComponent(g);
            Graphics2D g2d = (Graphics2D) g.create();
            g2d.setComposite(AlphaComposite.getInstance(AlphaComposite.SRC_OVER, DEFAULT_TRANSPARENCY));

            // Load image (error handling can be added)
            ImageIcon imageIcon = new ImageIcon(getClass().getResource(imagePath));
            Image image = imageIcon.getImage();

            // Calculate panel dimensions
            int panelWidth = getWidth();
            int panelHeight = getHeight();

            // Calculate desired scaled dimensions (optional customization)
            int desiredWidth = 200; // Adjust as needed
            int desiredHeight = 150; // Adjust as needed

            // Get the scaled image
            Image scaledImage = image.getScaledInstance(desiredWidth, desiredHeight, Image.SCALE_SMOOTH);

            // Draw the scaled image centered within the panel
            int xOffset = (panelWidth - desiredWidth) / 2;
            int yOffset = (panelHeight - desiredHeight) / 2;
            g2d.drawImage(scaledImage, xOffset, yOffset, this);
        }
    };

    backgroundPane2.setOpaque(false); // Make panel transparent

    // Add your other components to the background panel here

    this.setContentPane(backgroundPane2);
    this.setDefaultCloseOperation(WindowConstants.DO_NOTHING_ON_CLOSE);
    this.pack(); // Adjust frame size if needed
    this.setLocationRelativeTo(null); // Center the frame on screen
    this.setVisible(true);
}

       
    public void setIcon(){
        ImageIcon icon = new ImageIcon(getClass().getResource("/images/ico_oop.png"));
        setIconImage(icon.getImage());
        BackgroundPanel backgroundPanel = new BackgroundPanel("/images/ico_oop.png");
        setContentPane(backgroundPanel);
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        CB_seatNumber = new javax.swing.JComboBox<>();
        jButton1 = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        CB_seatClass = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        CB_travelerName = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Seats booking");
        setBackground(new java.awt.Color(0, 153, 153));

        jButton1.setText("Apply");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel5.setText("Class: ");

        CB_seatClass.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CB_seatClassActionPerformed(evt);
            }
        });

        jLabel1.setText("flight: Current flight number");

        jLabel6.setText("seat:");

        CB_travelerName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CB_travelerNameActionPerformed(evt);
            }
        });

        jLabel2.setText("Traveler");

        jPanel1.setLayout(new java.awt.GridLayout(1, 0));
        jPanel1.add(jLabel4);

        jButton2.setText("Done");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jLabel7.setText("Total seats price:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(43, 43, 43)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(CB_travelerName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(CB_seatClass, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(CB_seatNumber, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jButton2))
                                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 527, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 76, Short.MAX_VALUE)))
                        .addContainerGap(50, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButton1)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 214, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(50, 50, 50)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jButton2)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(CB_travelerName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2)
                            .addComponent(jLabel5)
                            .addComponent(CB_seatClass, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(CB_seatNumber, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6))
                        .addGap(13, 13, 13)
                        .addComponent(jButton1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(30, 30, 30)
                        .addComponent(jLabel7)))
                .addContainerGap(44, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
       
        

        travelerFrame.setEnabled(true);
        this.dispose();

    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        
        readSeats_class("select * from seats_class where class_name='"+CB_seatClass.getSelectedItem().toString()+"';");
        readash90Seats_class("select * from flight_seats where idFlights= '"+f.getIdFlights()+"' and seat_num=' "+CB_seatNumber.getSelectedItem().toString()+"';");
        jLabel7.setText("seat price: ");
        jLabel7.setText(jLabel7.getText()+" "+seat_class.getClassPrice());
        
        B.setEnabled(true);
        if(flag){
        int numSeats = 90;  // fix it and retrive data from planes table
        
        
        // Update the panel layout and add seat labels (optional)
        
        jPanel1.setLayout(new GridLayout(Math.ceilDiv(numSeats, 6), 8)); // Adjust rows based on numSeats
        addSeatLabels(jPanel1, numSeats); 
        flag=false;
        
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void CB_seatClassActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CB_seatClassActionPerformed
        generateCB_seatNumber();
    }//GEN-LAST:event_CB_seatClassActionPerformed

    private void CB_travelerNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CB_travelerNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_CB_travelerNameActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Book_seat.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Book_seat.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Book_seat.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Book_seat.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Book_seat().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> CB_seatClass;
    private javax.swing.JComboBox<String> CB_seatNumber;
    private javax.swing.JComboBox<String> CB_travelerName;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    // End of variables declaration//GEN-END:variables

private void populateComboBox(JComboBox<String> comboBox, String query){
        try {
            db.connect();
            PreparedStatement pst = db.getConnection().prepareStatement(query);
            ResultSet rs = pst.executeQuery();
                    
            while (rs.next()) {
                comboBox.addItem(rs.getString(1));
            }
            db.closeConnection();
        }
        catch (SQLException e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, "Error occurred while fetching data from the database.");
        }
        
    }
    public void generateCB_seatNumber(){
       // CB_seatNumber.setEnabled(true);
           CB_seatNumber.removeAllItems();
             populateComboBox(CB_seatNumber,"SELECT  seat_num FROM flight_seats where seat_class_id =(select class_id from seats_class where class_name='"+CB_seatClass.getSelectedItem().toString()+"' ) "
                     + "and idFlights ='"+f.getIdFlights()+"' and `empty` = '1';" );
       
        }
    
    private void readSeats_class( String query){
        try {
            db.connect();
            PreparedStatement pst = db.getConnection().prepareStatement(query);
            ResultSet rs = pst.executeQuery();
            
            
            String classId= "", calssName ="";
            float classPrice =0;
           // while(rs.next()){
           if(rs.next()){
                classId =rs.getNString(1); classPrice = rs.getLong(2); calssName = rs.getNString(3);
           // }
           }
            
            SeatClass seat_class_static= new SeatClass(classId,classPrice, calssName);
            seat_class_static.createInstance(classId, classPrice, calssName);
            SeatClass s=  SeatClass.getInstance();
            seat_class =seat_class_static;
            System.out.println(seat_class_static.toString() +""+s.toString());
            
            db.closeConnection();
        }
        catch (SQLException e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, "Error occurred while fetching data from the database.");
        }
    }
    private void readash90Seats_class( String query){
        try {
            db.connect();
            PreparedStatement pst = db.getConnection().prepareStatement(query);
            ResultSet rs = pst.executeQuery();
            
            
            String seatIdentifier= "", seatClassId ="", idFlights="", empty="";
            int seatNum =0;
           // while(rs.next()){
           if(rs.next()){
                seatIdentifier =rs.getNString(1); seatNum = rs.getInt(2); 
                seatClassId = rs.getNString(3); idFlights = rs.getNString(4);  empty = rs.getNString(5);
           // }
           }
            
            Seats seat_dash_static= new Seats(seatIdentifier,seatNum, seatClassId,idFlights,empty);
            seat_dash_static.createInstance(seatIdentifier,seatNum, seatClassId,idFlights,empty);
            Seats s=  Seats.getInstance();
            seat =seat_dash_static;
            System.out.println(seat_dash_static.toString() +""+s.toString());
            
            db.closeConnection();
        }
        catch (SQLException e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, "Error occurred while fetching data from the database.");
        }
    }
    private void addSeatLabels(JPanel panel, int numSeats) {
        for (int i = 0; i < numSeats; i++) {
            JLabel seatLabel = new JLabel("\t" + (i + 1));
            panel.add(seatLabel);
        }
    }
}
